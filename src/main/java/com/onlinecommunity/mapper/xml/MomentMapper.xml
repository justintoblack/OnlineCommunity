<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onlinecommunity.mapper.MomentMapper">

    <resultMap id="MomentResultMap" type="com.onlinecommunity.pojo.Moment">
        <id column="moment_id" property="momentId"/>
        <result column="uid" property="uid"/>
        <result column="content" property="content"/>
        <result column="moment_time" property="momentTime"/>
        <result column="is_active" property="isActive"/>
        <result column="deleted_at" property="deletedAt"/>
        <result column="picture_count" property="pictureCount"/>
        <result column="like_count" property="likeCount"/>
        <result column="comment_count" property="commentCount"/>
        <result column="repost_count" property="repostCount"/>
    </resultMap>
    <select id="listAllMoments" resultMap="MomentResultMap">
        select * from online_community.moment
    </select>

    <select id="getAllMomentsByUid" parameterType="Integer" resultMap="MomentResultMap">
        select *
        from online_community.moment
        where uid = #{uid}
    </select>

    <select id="getOneMomentByMomentId" parameterType="Integer" resultMap="MomentResultMap">
        select *
        from online_community.moment
        where moment_id = #{momentId}
    </select>

    <insert id="saveMoment" parameterType="com.onlinecommunity.pojo.Moment" useGeneratedKeys="true"
            keyProperty="momentId" >
        insert into online_community.moment(moment_id, uid, content, moment_time, is_active, deleted_at, picture_count,
                                            like_count, comment_count, repost_count)
        values (#{moment.momentId}, #{moment.uid}, #{moment.content}, #{moment.momentTime}, #{moment.isActive},
                #{moment.deletedAt}, #{moment.pictureCount},
                #{moment.likeCount}, #{moment.commentCount}, #{moment.repostCount})
    </insert>

    <delete id="deleteMomentByMomentId" parameterType="Integer">
        delete
        from online_community.moment
        where moment_id = #{momentId}
    </delete>

    <select id="getActiveMomentCountByUid" parameterType="Integer" resultType="Integer">
        select count(moment_id)
        from online_community.moment
        where uid = #{uid} and is_active = 1
    </select>

    <select id="getAllMomentCount" resultType="Integer">
        select count(moment_id)
        from online_community.moment
    </select>

    <select id="getAllMomentCountByUid" parameterType="Integer" resultType="Integer">
        select count(moment_id)
        from online_community.moment
        where uid = #{uid}
    </select>
    <select id="getActiveMomentsByPage" parameterType="com.onlinecommunity.pojo.Page"
            resultMap="MomentResultMap">
        select * from online_community.moment
        WHERE
        <if test="#{page.nextMomentId} != null">
            moment_id <![CDATA[<]]> #{page.nextMomentId} AND
        </if>
        is_active = 1
        ORDER BY moment_id DESC
        <choose>
            <when test="#{page.pageSize} != null">
                LIMIT #{page.pageSize}
            </when>
            <otherwise>
                LIMIT 9
            </otherwise>
        </choose>

    </select>

</mapper>
